<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>jersey on Marcus Schiesser</title>
    <link>/tags/jersey/</link>
    <description>Recent content in jersey on Marcus Schiesser</description>
    <image>
      <url>papermod-cover.png</url>
      <link>papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 02 Dec 2011 17:40:57 +0000</lastBuildDate><atom:link href="/tags/jersey/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Google App Engine as Backend for Android</title>
      <link>/2011/12/02/using-google-app-engine-as-backend-for-android/</link>
      <pubDate>Fri, 02 Dec 2011 17:40:57 +0000</pubDate>
      
      <guid>/2011/12/02/using-google-app-engine-as-backend-for-android/</guid>
      <description>If you&amp;rsquo;re looking for a way to create a backend for your Android application, Google App Engine looks like the perfect choice: You can use Java as you can do for Android and you don&amp;rsquo;t need to think too much about hosting, as it is all stored in the cloud.
Another benefit is that you can reuse your transfer objects on the client and on server side. But as it is often there are some problems doing this in practice.</description>
    </item>
    
    <item>
      <title>Using real POJOs (without JAXB Annotations) as transfer objects with JAX-RS </title>
      <link>/2011/12/01/using-real-pojos-without-jaxb-annotations-as-transfer-objects-with-jax-rs/</link>
      <pubDate>Thu, 01 Dec 2011 16:06:30 +0000</pubDate>
      
      <guid>/2011/12/01/using-real-pojos-without-jaxb-annotations-as-transfer-objects-with-jax-rs/</guid>
      <description>Are you annoyed that you have to annotate your POJOs with @XmlRootElement, so they can be used with JAX-RS? If your using Jersey as JAX-RS implementation your lucky: Just add to the &amp;lt;servlet&amp;gt; tag in your web.xml the following snippet:
&amp;lt;init-param&amp;gt; &amp;lt;param-name&amp;gt;com.sun.jersey.api.json.POJOMappingFeature&amp;lt;/param-name&amp;gt; &amp;lt;param-value&amp;gt;true&amp;lt;/param-value&amp;gt; &amp;lt;/init-param&amp;gt;  After restarting your servlet, your POJOs are marshalled to JSON as a charme. Enjoy!</description>
    </item>
    
    <item>
      <title>Openbahn-API – Bahn-Webseite als Webservice</title>
      <link>/2011/06/22/openbahn-api-%e2%80%93-bahn-webseite-als-webservice/</link>
      <pubDate>Wed, 22 Jun 2011 20:13:17 +0000</pubDate>
      
      <guid>/2011/06/22/openbahn-api-%e2%80%93-bahn-webseite-als-webservice/</guid>
      <description>As this is only of interest for German users - this article is in German only. It&amp;rsquo;s about a new project of mine. Sorry folks.
Ich bin gerade dabei eine Android-App zu entwickeln, mit der es möglich ist Fahrkarten für Bahn-Pendler einfacher zu buchen. Bei der Entwicklung ist mir aufgefallen, dass die Bahn leider keine Webservices nach außen zur Verfügung stellt – die Webseite www.bahn.de ist zusammen mit der mobilen Variante m.</description>
    </item>
    
  </channel>
</rss>
