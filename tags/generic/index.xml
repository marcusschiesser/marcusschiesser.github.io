<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>generic on Marcus Schiesser</title>
    <link>https://marcusschiesser.github.io/tags/generic/</link>
    <description>Recent content in generic on Marcus Schiesser</description>
    <image>
      <url>https://marcusschiesser.github.io/papermod-cover.png</url>
      <link>https://marcusschiesser.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 09 Feb 2009 10:40:08 +0000</lastBuildDate><atom:link href="https://marcusschiesser.github.io/tags/generic/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Generic error handler for ExtJS</title>
      <link>https://marcusschiesser.github.io/2009/02/09/generic-error-handler-for-extjs/</link>
      <pubDate>Mon, 09 Feb 2009 10:40:08 +0000</pubDate>
      
      <guid>https://marcusschiesser.github.io/2009/02/09/generic-error-handler-for-extjs/</guid>
      <description>When you are doing client/server communication with ExtJS you probably run into the problem that you want to handle server side errors in a generic way. A solution that I found is to override the handleFailure function in the Ext.data.Connection class:
Ext.data.Connection.prototype._handleFailure = Ext.data.Connection.prototype.handleFailure; Ext.data.Connection.prototype.handleFailure = function(response, e) { var errorText = Ext.DomQuery.selectValue(&amp;quot;Reason/Text&amp;quot;, response.responseXML, &amp;quot;Unknown Error&amp;quot;); Ext.Msg.alert(&#39;Error&#39;, errorText); Ext.data.Connection.prototype._handleFailure.call(this, response, e); };  This handler simply is called whenever a server side failure occurs.</description>
    </item>
    
  </channel>
</rss>
