<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>selector on Marcus Schiesser</title>
    <link>/tags/selector/</link>
    <description>Recent content in selector on Marcus Schiesser</description>
    <image>
      <url>papermod-cover.png</url>
      <link>papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 05 Aug 2009 13:31:29 +0000</lastBuildDate><atom:link href="/tags/selector/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Let the user select an item in a modal dialog</title>
      <link>/2009/08/05/selecting-an-item-in-javascript/</link>
      <pubDate>Wed, 05 Aug 2009 13:31:29 +0000</pubDate>
      
      <guid>/2009/08/05/selecting-an-item-in-javascript/</guid>
      <description>After having used the shiny new YUI3 library for a project, it&amp;rsquo;s about time to share my YUI3 experiences with you. For the project I built an item selector: A modal dialog is openend and the user has to select an item. After selection the dialog is closed and the selected item is passed to a callback function.
Here you can find the full source for the item selector. An example to use the selector can be as simple as this:</description>
    </item>
    
    <item>
      <title>Phone number selector in ExtJS</title>
      <link>/2009/04/08/phone-number-selector-in-extjs/</link>
      <pubDate>Wed, 08 Apr 2009 17:10:42 +0000</pubDate>
      
      <guid>/2009/04/08/phone-number-selector-in-extjs/</guid>
      <description>Wouldn&amp;rsquo;t it be nice to use a combo box of flag images to select the country code of phone numbers?
If you use a country selection component that&amp;rsquo;s quite easy. Just wrap it in a re-usable component together with a textfield for the local number and the result looks like this:
And here&amp;rsquo;s the example&amp;rsquo;s source:
Ext.onReady(function(){ var panel = new Ext.FormPanel({ style: &#39;padding: 10px;&#39;, frame: true, labelWidth: 50, width: 400, items: [{ fieldLabel: &#39;Mobile&#39;, xtype: &#39;phonefield&#39;, anchor: &#39;100%&#39;, emptyText: &#39;(e.</description>
    </item>
    
    <item>
      <title>Component for selecting multiple items in Ext</title>
      <link>/2009/04/08/component-for-selecting-multiple-items-in-ext/</link>
      <pubDate>Wed, 08 Apr 2009 16:52:08 +0000</pubDate>
      
      <guid>/2009/04/08/component-for-selecting-multiple-items-in-ext/</guid>
      <description>Ext already provides a component to select multiple items. The thing I do not like about it is that it covers too much space on the screen. Therefore I thought of a component that initially looks like a combo box and then opens a new window to let the user select the items.
As a nice example tells more than thousand words - here it is:
As you can see, it is actually based on the component provided by the Ext examples.</description>
    </item>
    
    <item>
      <title>Country selector with flag images in ExtJS</title>
      <link>/2009/04/01/country-selector-with-flag-images-in-extjs/</link>
      <pubDate>Wed, 01 Apr 2009 10:04:48 +0000</pubDate>
      
      <guid>/2009/04/01/country-selector-with-flag-images-in-extjs/</guid>
      <description>Based on the ExtJS-Tutorial on how to build a combo box with an icon, I built a component that can be used as a country selector in ExtJS.
Here you can find the code of the component:
Ext.ns(&#39;Extreme.components&#39;); Extreme.components.CountryCombo = Ext.extend(Ext.form.ComboBox, { constructor: function(config){ var data; if (config.phoneLabels) { data = [[&#39;+49&#39;, &#39;+49&#39;, &#39;ux-flag-de&#39;], [&#39;+43&#39;, &#39;+43&#39;, &#39;ux-flag-at&#39;], [&#39;+41&#39;, &#39;+41&#39;, &#39;ux-flag-ch&#39;], [&#39;+352&#39;, &#39;+352&#39;, &#39;ux-flag-lu&#39;], [&#39;+432&#39;, &#39;+432&#39;, &#39;ux-flag-li&#39;]]; } else { data = [[&#39;DE&#39;, &#39;Deutschland&#39;, &#39;ux-flag-de&#39;], [&#39;AT&#39;, &#39;Ã–sterreich&#39;, &#39;ux-flag-at&#39;], [&#39;CH&#39;, &#39;Schweiz&#39;, &#39;ux-flag-ch&#39;], [&#39;LU&#39;, &#39;Luxemburg&#39;, &#39;ux-flag-lu&#39;], [&#39;LI&#39;, &#39;Lichtenstein&#39;, &#39;ux-flag-li&#39;]]; } Extreme.</description>
    </item>
    
  </channel>
</rss>
