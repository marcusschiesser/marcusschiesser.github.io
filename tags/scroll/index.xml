<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>scroll on Marcus Schiesser</title>
    <link>https://marcusschiesser.github.io/tags/scroll/</link>
    <description>Recent content in scroll on Marcus Schiesser</description>
    <image>
      <url>https://marcusschiesser.github.io/papermod-cover.png</url>
      <link>https://marcusschiesser.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 02 Nov 2009 20:54:28 +0000</lastBuildDate><atom:link href="https://marcusschiesser.github.io/tags/scroll/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to detect whether an element is in a scrollable parent </title>
      <link>https://marcusschiesser.github.io/2009/11/02/how-to-detect-whether-an-element-is-in-a-scrollable-parent/</link>
      <pubDate>Mon, 02 Nov 2009 20:54:28 +0000</pubDate>
      
      <guid>https://marcusschiesser.github.io/2009/11/02/how-to-detect-whether-an-element-is-in-a-scrollable-parent/</guid>
      <description>Just think of having an element in a scrollable parent (the CSS property overflow is set to scroll) and you want to test whether the element is visible or not.
Using this little function you can do the trick:
function isInView(node){ var offsetParent = node.offsetParent; var top = offsetParent.scrollTop; var height = offsetParent.offsetHeight; var y = node.offsetTop; return y &amp;gt;= top &amp;amp;&amp;amp; y &amp;lt;= (top + height); } And here&amp;rsquo;s a small use case - this one scrolls the element into the visible region, if it is not already in the view:</description>
    </item>
    
  </channel>
</rss>
